import axios from "axios";
import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import AdminDashBoard from "../AdminDashBoard";
import Footer from "../../Common/Footer";

export default function UpdateDeliveryDriver() {
  const [Id, setId] = useState();
  const [did, setDid] = useState("");
  const [fullname, setFullname] = useState("");
  const [email, setEmail] = useState("");
  const [address, setAddress] = useState("");
  const [phone, setPhone] = useState("");
  const [dob, setDob] = useState("");
  const [licenseno, setLicenseNo] = useState("");
  const [vehicleno, setVehicleNo] = useState("");
  const [nic, setNic] = useState("");
  const [basicsalary, setBasicSalary] = useState("");

  const { id } = useParams();

  useEffect(() => {
    axios
      .get(`http://localhost:8070/deliverydriver/getDid/${id}`)
      .then((res) => {
        const driver = res.data.dd;
        setId(driver._id);
        setDid(driver.did);
        setFullname(driver.fullname);
        setEmail(driver.email);
        setAddress(driver.address);
        setPhone(driver.phone);
        setDob(driver.dob);
        setLicenseNo(driver.licenseno);
        setVehicleNo(driver.vehicleno);
        setNic(driver.nic);
        setBasicSalary(driver.basicsalary);
      })
      .catch((err) => {
        alert(err.message);
      });
  }, [id]); // Include id in dependency array

  function updateData(e) {
    e.preventDefault();

    if (fullname.trim().length < 3) {
      alert("Full name should be at least 3 characters long.");
      return;
    }

    const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/i;
    if (!email.match(emailRegex)) {
      alert("Please enter a valid email address.");
      return;
    }

    const phoneRegex = /^[0-9]{10}$/;
    if (!phone.match(phoneRegex)) {
      alert("Phone number should be exactly 10 digits.");
      return;
    }

    const nicRegex = /^[0-9]{12}$/;
    if (!nic.match(nicRegex)) {
      alert("NIC should consist of exactly 12 digits.");
      return;
    }

    if (licenseno.trim() === "") {
      alert("License number cannot be empty.");
      return;
    }

    if (vehicleno.trim() === "") {
      alert("Vehicle number cannot be empty.");
      return;
    }

    const dobDate = new Date(dob);
    const today = new Date();
    const age = today.getFullYear() - dobDate.getFullYear();
    const month = today.getMonth() - dobDate.getMonth();
    if (month < 0 || (month === 0 && today.getDate() < dobDate.getDate())) {
      age--;
    }

    if (age < 21) {
      alert("Employee's age should be greater than 21.");
      return;
    }

    const newDeliveryDriver = {
      fullname,
      email,
      address,
      phone,
      dob,
      licenseno,
      vehicleno,
      nic,
      basicsalary,
    };

    axios
      .put(`http://localhost:8070/deliverydriver/update/${Id}`, newDeliveryDriver)
      .then((res) => {
        if (res.data === "Done") {
          alert("Delivery Driver updated successfully");
          window.location.replace("/alldd");
        } else {
          alert("Couldn't update Delivery Driver");
          window.location.replace("/alldd");
        }
      })
      .catch((err) => {
        alert(err.message);
      });
  }

  return (
    <div>
      <AdminDashBoard />
      <div>
        <main>
          <div className="container1">
            <div className="row justify-content-center">
              <div className="col-lg-5">
                <br />
                <br />
                <br />
                <div className="card shadow-lg border-0 rounded-lg mt-5">
                  <div className="card-header">
                    <h3 className="text-center font-weight-light my-4">Update Delivery Driver</h3>
                  </div>
                  <div className="card-body">
                    <form onSubmit={updateData}>
                      <div className="form-floating mb-3">
                        <label>Delivery Driver Id :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          pattern="[D][0-9][0-9][0-9]"
                          name="did"
                          value={did}
                          placeholder="Type employee id"
                          aria-required="true"
                          readOnly
                        />
                      </div>
                      <div className="form-floating mb-3">
                        <label>Full name :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="fullname"
                          placeholder="Type full name"
                          value={fullname}
                          onChange={(e) => {
                            setFullname(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Email :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="email"
                          name="email"
                          placeholder="Type email"
                          value={email}
                          onChange={(e) => {
                            setEmail(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Address :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="address"
                          value={address}
                          placeholder="Type address"
                          onChange={(e) => {
                            setAddress(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Contact No :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          id="phone"
                          name="phone"
                          value={phone}
                          placeholder="Type contact number"
                          pattern="[0-9]{10}"
                          onChange={(e) => {
                            setPhone(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Date of Birth :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="date"
                          name="dob"
                          placeholder="Type date of birth"
                          value={dob}
                          onChange={(e) => {
                            setDob(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>License No :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="licenseno"
                          value={licenseno}
                          placeholder="Type license no"
                          onChange={(e) => {
                            setLicenseNo(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Vehicle No :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="vehicleno"
                          value={vehicleno}
                          placeholder="Type vehicle no"
                          onChange={(e) => {
                            setVehicleNo(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>NIC No :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="nic"
                          placeholder="Type nic no"
                          value={nic}
                          onChange={(e) => {
                            setNic(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Basic Salary :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="basicsalary"
                          value={basicsalary}
                          placeholder="Type basic salary"
                          onChange={(e) => {
                            setBasicSalary(e.target.value);
                          }}
                          required
                        />
                      </div>

                      <br />

                      <div className="d-grid">
                        <button
                          type="submit"
                          className="btn btn-primary btn-block"
                        >
                          Update
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
      <Footer />
    </div>
  );
}

