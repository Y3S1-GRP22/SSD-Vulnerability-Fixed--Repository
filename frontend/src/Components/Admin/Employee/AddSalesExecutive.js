import React, { useState } from "react";
import axios from "axios";
import AdminDashBoard from "../AdminDashBoard";
import Footer from "../../Common/Footer";

function AddSalesExecutive() {
  const [sid, setSid] = useState("");
  const [fullname, setFullname] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [repassword, setRePassword] = useState("");
  const [address, setAddress] = useState("");
  const [phone, setPhone] = useState("");
  const [dob, setDob] = useState("");
  const [qualification, setQualification] = useState("");
  const [basicsalary, setBasicSalary] = useState("");
  const [gender, setGender] = useState("");
  const [image, setImage] = useState("");
  const eid = sid;

  function convert(e) {
    var reader = new FileReader();
    reader.readAsDataURL(e.target.files[0]);
    reader.onload = () => {
      setImage(reader.result);
    };
    reader.onerror = (error) => {
      console.log("Error: ", error);
    };
  }

  async function sendData(e) {
    e.preventDefault();

    var input = document.getElementById("pswd").value.trim();
    var em = document.getElementById("em").value.trim();
    var s = document.getElementById("sid").value.trim();
    var d1 = new Date(dob);
    var d2 = new Date();
    var diff = d2.getTime() - d1.getTime();
    var daydiff = (diff / 31536000000).toFixed(0);
    console.log(daydiff);

    if (input.length < 8) {
      alert("Password should consist of at least 8 characters.");
    } else if (!input.match(/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).{8,}/)) {
      alert("Password should contain a lowercase letter, an uppercase letter, a number, and a special character.");
    } else if (s.startsWith("S") === false) {
      alert("SID should start with 'S'.");
    } else if (s.length !== 4) {
      alert("SID should consist of 4 characters.");
    } else if (!em.match(/^[a-z0-9._%+-]+@[a-z0-9-]+(?:\.[a-z0-9-]+)*$/)) {
      alert("Invalid email format.");
    } else if (daydiff < 21) {
      alert("Employee's age should be greater than 21.");
    } else if (
      !sid ||
      !fullname ||
      !email ||
      !password ||
      !repassword ||
      !address ||
      !phone ||
      !dob ||
      !qualification ||
      !basicsalary ||
      !gender
    ) {
      alert("Fields can't be empty.");
    } else if (password !== repassword) {
      alert("Passwords do not match.");
    } else {
      try {
        const response = await axios.post("http://localhost:8070/salesexecutive/addse", {
          sid,
          fullname,
          email,
          address,
          phone,
          password,
          dob,
          qualification,
          basicsalary,
          gender,
          image,
        });

        if (response.data.message) {
          // Handle error messages from backend
          if (response.data.message === "Email is already taken") {
            alert("User already available. Provide another email address.");
          } else if (response.data.message === "SID is already taken") {
            alert("SID already taken. Please provide another ID.");
          } else {
            alert("Unexpected response from server: " + response.data.message);
          }
        } else {
          // Handle successful creation
          alert("Inserted new Sales Executive");
          window.location.replace("/allse");
        }
      } catch (err) {
        // Handle errors during API call
        console.error(err);
        alert("An error occurred: " + (err.response?.data?.message || err.message));
      }

    
    }
  }

  return (
    <div>
      <AdminDashBoard />
      <div>
        <main>
          <div className="container1">
            <div className="row justify-content-center">
              <div className="col-lg-5">
                <br />
                <br />
                <br />
                <br />

                <div className="card shadow-lg border-0 rounded-lg mt-5">
                  <div className="card-header">
                    <h3 className="text-center font-weight-light my-4">Add Sales Executive</h3>
                  </div>
                  <div className="card-body">
                    <form method="post">
                      <div className="form-floating mb-3">
                        <label>Sales Executive ID :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="sid"
                          id="sid"
                          pattern="[S][0-9][0-9][0-9]"
                          placeholder="Type employee id"
                          aria-required="true"
                          onChange={(e) => setSid(e.target.value)}
                          value={sid}
                        />
                      </div>
                      <div className="form-floating mb-3">
                        <label>Full name :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="fullname"
                          placeholder="Type full name"
                          onChange={(e) => setFullname(e.target.value)}
                          value={fullname}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Email :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="email"
                          name="email"
                          id="em"
                          placeholder="Type email"
                          onChange={(e) => setEmail(e.target.value)}
                          value={email}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Password :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="password"
                          id="pswd"
                          pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
                          name="password"
                          placeholder="Type password"
                          onChange={(e) => setPassword(e.target.value)}
                          value={password}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Re-Type Password :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="password"
                          pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
                          name="repassword"
                          placeholder="Type password"
                          onChange={(e) => setRePassword(e.target.value)}
                          value={repassword}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Address :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="address"
                          placeholder="Type address"
                          onChange={(e) => setAddress(e.target.value)}
                          value={address}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Contact No :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          id="phone"
                          name="phone"
                          placeholder="Type contact number"
                          pattern="[0-9]{10}"
                          onChange={(e) => setPhone(e.target.value)}
                          value={phone}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Date of Birth :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="date"
                          id="dob"
                          placeholder="Type date of birth"
                          onChange={(e) => setDob(e.target.value)}
                          value={dob}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Qualification :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="text"
                          name="qualification"
                          placeholder="Type qualification"
                          onChange={(e) => setQualification(e.target.value)}
                          value={qualification}
                        />
                      </div>

                      <div className="form-floating mb-3">
                        <label>Basic Salary :</label>
                        <br />
                        <br />
                        <input
                          className="form-control"
                          type="number"
                          name="basicsalary"
                          placeholder="Type basic salary"
                          onChange={(e) => setBasicSalary(e.target.value)}
                          value={basicsalary}
                        />
                      </div>

                      <div>
                          <label>Gender : &nbsp;</label>
                          <input
                            type="radio"
                            id="m"
                            name="gender"
                            value="Male"
                            onChange={(e) => {
                              setGender(e.target.value);
                            }}
                          ></input>
                          <label htmlFor="m"> &nbsp;&nbsp;Male &nbsp;</label>
                          <input
                            type="radio"
                            id="f"
                            name="gender"
                            value="Female"
                            onChange={(e) => {
                              setGender(e.target.value);
                            }}
                          ></input>
                          <label htmlFor="f"> &nbsp;&nbsp;Female</label>
                          <br />
                        </div>


                      <div className="form-floating mb-3">
                        <label>Profile Image :</label>
                        <br />
                        <br />
                        <input
                          type="file"
                          accept="image/*"
                          onChange={convert}
                        />
                      </div>

                      <div className="form-group">
                        <button
                          className="btn btn-primary"
                          onClick={sendData}
                        >
                          Submit
                        </button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
      <Footer />
    </div>
  );
}

export default AddSalesExecutive;
