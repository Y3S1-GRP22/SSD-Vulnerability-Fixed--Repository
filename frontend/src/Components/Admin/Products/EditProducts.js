import React, { useEffect, useState } from "react";
import axios from "axios";
import AdminDashBoard from "../AdminDashBoard";
import Footer from "../../Common/Footer";

function isValidBase64(str) {
  if (typeof str !== "string") {
    return false;
  }

  // Remove the 'data:image/...;base64,' part if it exists
  const base64Pattern = /^data:image\/(png|jpeg|jpg|gif);base64,/;
  const base64Data = str.replace(base64Pattern, "");

  try {
    return btoa(atob(base64Data)) === base64Data;
  } catch (err) {
    return false;
  }
}

function EditProducts() {
  const productDetails = JSON.parse(localStorage.getItem("products"));

  const [state, setState] = useState({
    ProductName: productDetails.ProductName,
    Price: productDetails.Price,
    Description: productDetails.Description,
    Qty: productDetails.Qty,
    Category: productDetails.Category,
    ImageBase64: productDetails.ImageBase64,
    isLoading: false,
  });
  const [csrfToken, setCsrfToken] = useState("");
  useEffect(() => {
    const cachedToken = sessionStorage.getItem("csrfToken"); // Check session storage
    if (cachedToken) {
      setCsrfToken(cachedToken); // Use cached token if available
    } else {
      const fetchCsrfToken = async () => {
        try {
          const response = await axios.get("http://localhost:8070/csrf-token", {
            withCredentials: true,
          });
          const token = response.data.csrfToken;
          console.log("", token);
          setCsrfToken(token);
          sessionStorage.setItem("csrfToken", token); // Store token in session storage
        } catch (error) {
          console.error("Error fetching CSRF token:", error);
        }
      };
      fetchCsrfToken(); // Fetch the token if not cached
    }
  }, []);

  const handleSubmit = () => {
    setState({ ...state, isLoading: true });
    if (
      !state.ProductName ||
      !state.Price ||
      !state.Description ||
      !state.Qty ||
      !state.Category ||
      !state.ImageBase64
    ) {
      console.log("Please fill all required fields.");
      alert("Please fill all required fields.");
      setState({ ...state, isLoading: false });
    } else if (state.ProductName.length < 3) {
      alert("Product Name should be at least 3 characters long.");
      setState({ ...state, isLoading: false });
    } else if (isNaN(state.Price) || state.Price <= 0) {
      alert("Price must be a valid positive number.");
      setState({ ...state, isLoading: false });
    } else if (isNaN(state.Qty) || state.Qty <= 0) {
      alert("Qty must be a valid positive number.");
      setState({ ...state, isLoading: false });
    } else if (!isValidBase64(state.ImageBase64)) {
      alert("ImageBase64 is not valid.");
      setState({ ...state, isLoading: false });
    } else {
      console.log(state);
      axios
        .patch(
          `http://localhost:8070/product/${productDetails._id}`,
          {
            ProductName: state.ProductName,
            Price: state.Price,
            Description: state.Description,
            Qty: state.Qty,
            Category: state.Category,
            ImageBase64: state.ImageBase64,
          },
          {
            headers: {
              "X-CSRF-Token": csrfToken, // Add CSRF token to headers
            },
            withCredentials: true, // Ensure credentials are sent with the request
          }
        )
        .then((res) => {
          console.log(res.data);
          alert("Your data has been successfully updated");
          setState({ ...state, isLoading: false });
          window.location.replace("/ViewProducts");
        })
        .catch((err) => {
          console.log(err);
          setState({ ...state, isLoading: false });
          alert(
            "An error occurred while updating the product. Please try again."
          );
        });
    }
  };

  return (
    <div>
      <AdminDashBoard />
      <div>
        <div>
          <main>
            <div className="container1">
              <div className="row justify-content-center">
                <div className="col-lg-5">
                  <div className="card shadow-lg border-0 rounded-lg mt-5">
                    <div className="card-header">
                      <h3 className="text-center font-weight-light my-4">
                        Edit Product Details
                      </h3>
                    </div>
                    <div className="card-body">
                      <>
                        <div className="form-floating mb-3">
                          <label>Product Name</label>
                          <br />
                          <br />
                          <input
                            className="form-control"
                            placeholder="Product Name"
                            defaultValue={productDetails?.ProductName}
                            onChange={(e) =>
                              setState({
                                ...state,
                                ProductName: e.target.value,
                              })
                            }
                          />
                        </div>

                        <div className="form-floating mb-3">
                          <label>Price</label>
                          <br />
                          <br />
                          <input
                            className="form-control"
                            placeholder="Price"
                            type={"number"}
                            defaultValue={productDetails?.Price}
                            onChange={(e) =>
                              setState({
                                ...state,
                                Price: e.target.value,
                              })
                            }
                          />
                        </div>

                        <div className="form-floating mb-3">
                          <label>Description</label>
                          <br />
                          <br />
                          <input
                            className="form-control"
                            placeholder="Description"
                            defaultValue={productDetails?.Description}
                            onChange={(e) =>
                              setState({
                                ...state,
                                Description: e.target.value,
                              })
                            }
                          />
                        </div>

                        <div className="form-floating mb-3">
                          <label>Qty</label>
                          <br />
                          <br />
                          <input
                            className="form-control"
                            placeholder="Qty"
                            type={"number"}
                            defaultValue={productDetails?.Qty}
                            onChange={(e) =>
                              setState({
                                ...state,
                                Qty: e.target.value,
                              })
                            }
                          />
                        </div>

                        <div className="form-floating mb-3">
                          <label>Category</label>
                          <br />
                          <br />
                          <input
                            className="form-control"
                            placeholder="Category"
                            defaultValue={productDetails?.Category}
                            onChange={(e) =>
                              setState({
                                ...state,
                                Category: e.target.value,
                              })
                            }
                          />
                        </div>

                        <div className="form-floating mb-3">
                          <label>Image</label>
                          <br />
                          <br />
                          <input
                            className="form-control"
                            type="file"
                            placeholder="Image"
                            onChange={(e) => {
                              const file = e.target.files[0];
                              const reader = new FileReader();

                              reader.onloadend = () => {
                                setState({
                                  ...state,
                                  ImageBase64: reader.result,
                                });
                              };

                              reader.readAsDataURL(file);
                            }}
                          />
                        </div>

                        <br />

                        <div className="d-grid">
                          <input
                            type="submit"
                            className="btn btn-primary btn-block"
                            onClick={() => handleSubmit()}
                            disabled={state.isLoading}
                            value={state.isLoading ? "Loading..." : "Add"}
                          ></input>
                        </div>
                      </>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>
      {/* <Footer /> */}
    </div>
  );
}

export default EditProducts;
