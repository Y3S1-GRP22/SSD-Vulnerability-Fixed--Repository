import React, { useState, useEffect } from "react";
import axios from "axios";
import { useParams } from "react-router-dom";
import Header from "../Admin/Header";
import AdminSideBar from "../Admin/AdminSidebar";
import Footer from "../Common/Footer";

export default function UpdateSupplier() {
  const [name, setname] = useState("");
  const [address, setaddress] = useState("");
  const [contactNumber, setcontactNumber] = useState("");
  const [email, setemail] = useState("");
  const [productsSupplied, setproductsSupplied] = useState("");

  const { id } = useParams();
  const [csrfToken, setCsrfToken] = useState("");

  useEffect(() => {
    const cachedToken = sessionStorage.getItem("csrfToken"); // Check session storage
    if (cachedToken) {
      setCsrfToken(cachedToken); // Use cached token if available
    } else {
      const fetchCsrfToken = async () => {
        try {
          const response = await axios.get("http://localhost:8070/csrf-token", {
            withCredentials: true,
          });
          const token = response.data.csrfToken;
          console.log("", token);
          setCsrfToken(token);
          sessionStorage.setItem("csrfToken", token); // Store token in session storage
        } catch (error) {
          console.error("Error fetching CSRF token:", error);
        }
      };
      fetchCsrfToken(); // Fetch the token if not cached
    }
  }, []);

  useEffect(() => {
    axios
      .get(`http://localhost:8070/supplier/getsupplier/${id}`)
      .then((res) => {
        console.log(res.data);
        setname(res.data.suppliers.name);
        setaddress(res.data.suppliers.address);
        setcontactNumber(res.data.suppliers.contactNumber);
        setemail(res.data.suppliers.email);
        setproductsSupplied(res.data.suppliers.productsSupplied);
      })
      .catch((err) => {
        console.log(err);
      });
  }, [id]);

  function isValidEmail(email) {
    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    return emailPattern.test(email);
  }

  function isValidContactNumber(contactNumber) {
    const phonePattern = /^[0-9]{10}$/; // Example: 10 digits for a valid phone number
    return phonePattern.test(contactNumber);
  }

  function updateData(e) {
    e.preventDefault();

    if (!name.trim()) {
      alert("Please enter the supplier's name.");
      return;
    }

    if (!address.trim()) {
      alert("Please enter the supplier's address.");
      return;
    }

    if (!isValidContactNumber(contactNumber)) {
      alert("Please enter a valid 10-digit contact number.");
      return;
    }

    if (!isValidEmail(email)) {
      alert("Please enter a valid email address.");
      return;
    }

    if (!productsSupplied.trim()) {
      alert("Please enter the products supplied.");
      return;
    }

    const newSupp = {
      name,
      address,
      contactNumber,
      email,
      productsSupplied,
    };

    axios
      .put(`http://localhost:8070/supplier/updatesupplier/${id}`, newSupp, {
        headers: {
          "X-CSRF-Token": csrfToken, // Add CSRF token to headers
        },
        withCredentials: true, // Ensure credentials are sent with the request
      })
      .then(() => {
        alert("Supplier details updated");
        window.location.replace("http://localhost:3000/supplier");
      })
      .catch((err) => {
        alert("Error updating supplier details: " + err);
      });
  }

  return (
    <div>
      <Header></Header>

      <div className="containerf">
        <AdminSideBar></AdminSideBar>
        <div
          className="container"
          style={{
            marginTop: "100px",
            marginLeft: "520px",
            marginRight: "500px",
          }}
        >
          <form onSubmit={updateData}>
            <h3>Update Supplier Details</h3>
            <br></br>

            <div className="form-group">
              <label htmlFor="name">Supplier Name</label>
              <input
                type="text"
                className="form-control"
                id="name"
                value={name}
                onChange={(e) => {
                  setname(e.target.value);
                }}
              />
            </div>

            <div className="form-group">
              <label htmlFor="address">Supplier Address</label>
              <input
                type="text"
                className="form-control"
                id="address"
                value={address}
                onChange={(e) => {
                  setaddress(e.target.value);
                }}
              />
            </div>

            <div className="form-group">
              <label htmlFor="contactNumber">Contact Number</label>
              <input
                type="text"
                className="form-control"
                id="contactNumber"
                value={contactNumber}
                onChange={(e) => {
                  setcontactNumber(e.target.value);
                }}
              />
            </div>

            <div className="form-group">
              <label htmlFor="email">Supplier Email</label>
              <input
                type="text"
                className="form-control"
                id="email"
                value={email}
                onChange={(e) => {
                  setemail(e.target.value);
                }}
              />
            </div>

            <div className="form-group">
              <label htmlFor="productsSupplied">Products Supplied</label>
              <input
                type="text"
                className="form-control"
                id="productsSupplied"
                value={productsSupplied}
                onChange={(e) => {
                  setproductsSupplied(e.target.value);
                }}
              />
            </div>

            <button
              type="submit"
              className="btn btn-primary"
              style={{ marginTop: "10px" }}
            >
              Update <i className="fa fa-check"></i>
            </button>
          </form>
        </div>
      </div>
      <Footer></Footer>
    </div>
  );
}
