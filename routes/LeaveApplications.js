const router = require("express").Router();
const LeaveApplication = require("../models/leaveapplication");
const Counter = require("../models/counter");
const SE = require("../models/salesexecutive");
const DD = require("../models/deliverydriver");
const logger = require('../utils/logger'); // Import logger

// CREATE - Create leave application for delivery driver
router.post("/addladd", async (req, res) => {
  try {
    const { eid, fullname, title, days, startdate, enddate, reason } = req.body;
    const status = "Pending";

    // Check if the delivery driver exists
    const driver = await DD.findOne({ did: eid });
    if (!driver) {
      logger.info("Delivery driver not found");
      return res.status(404).json("No id");
    }

    // Autoincrement field
    const counter = await Counter.findOneAndUpdate(
      { id: "autoval" },
      { $inc: { seq: 1 } },
      { new: true }
    );

    const seqId = counter ? counter.seq : 1;
    if (!counter) {
      await new Counter({ id: "autoval", seq: 1 }).save();
    }

    // Create new leave application
    const newLeave = new LeaveApplication({
      Id: seqId,
      eid,
      fullname,
      title,
      days: Number(days),
      startdate,
      enddate,
      reason,
      status,
    });

    await newLeave.save();
    logger.info("Leave application created successfully for delivery driver");
    res.status(201).json("Success");
  } catch (err) {
    logger.error(`Error creating leave application for delivery driver: ${err.message}`);
    res.status(500).json("Failed");
  }
});

// CREATE - Create leave application for sales executive
router.post("/addlase", async (req, res) => {
  try {
    const { eid, fullname, title, days, startdate, enddate, reason } = req.body;
    const status = "Pending";

    // Check if the sales executive exists
    const executive = await SE.findOne({ sid: eid });
    if (!executive) {
      logger.info("Sales executive not found");
      return res.status(404).json("No id");
    }

    // Autoincrement field
    const counter = await Counter.findOneAndUpdate(
      { id: "autoval" },
      { $inc: { seq: 1 } },
      { new: true }
    );

    const seqId = counter ? counter.seq : 1;
    if (!counter) {
      await new Counter({ id: "autoval", seq: 1 }).save();
    }

    // Create new leave application
    const newLeave = new LeaveApplication({
      Id: seqId,
      eid,
      fullname,
      title,
      days: Number(days),
      startdate,
      enddate,
      reason,
      status,
    });

    await newLeave.save();
    logger.info("Leave application created successfully for sales executive");
    res.status(201).json("Success");
  } catch (err) {
    logger.error(`Error creating leave application for sales executive: ${err.message}`);
    res.status(500).json("Failed");
  }
});

// READ function - fetch data of all leaves
router.get("/getleaves", async (req, res) => {
  try {
    const leaves = await LeaveApplication.find();
    logger.info("Fetched all leave applications");
    res.status(200).json(leaves);
  } catch (err) {
    logger.error(`Error fetching leaves: ${err.message}`);
    res.status(422).json({ status: "Error fetching leaves", error: err.message });
  }
});

// DELETE function
router.delete("/deletela/:id", async (req, res) => {
  try {
    const Id = req.params.id;
    const result = await LeaveApplication.findByIdAndDelete(Id);
    if (!result) {
      logger.info("Leave application not found");
      return res.status(404).json("Leave application not found");
    }
    logger.info("Leave application deleted successfully");
    res.status(200).json("Success");
  } catch (err) {
    logger.error(`Error deleting leave application: ${err.message}`);
    res.status(500).json("Error");
  }
});

// Function to get leave application details by Id
router.get("/getId/:id", async (req, res) => {
  try {
    const id = req.params.id;
    const leaveApplication = await LeaveApplication.findOne({ Id: id });
    if (!leaveApplication) {
      logger.info("Leave application not found");
      return res.status(404).json({ status: "Details not found" });
    }
    logger.info("Leave application details fetched successfully");
    res.status(200).json({ status: "Details fetched", leaveApplication });
  } catch (err) {
    logger.error(`Error fetching leave application details by Id: ${err.message}`);
    res.status(500).json({ status: "Error fetching details", error: err.message });
  }
});

// UPDATE function
router.put("/update/:id", async (req, res) => {
  try {
    const Id = req.params.id;
    const { status } = req.body;

    const updatedLeave = await LeaveApplication.findByIdAndUpdate(Id, { status }, { new: true });
    if (!updatedLeave) {
      logger.info("Leave application not found for update");
      return res.status(404).json("Leave application not found");
    }

    logger.info("Leave application status updated successfully");
    res.status(200).json("Done");
  } catch (err) {
    logger.error(`Error updating leave application: ${err.message}`);
    res.status(500).json("Failed");
  }
});

// Function to get leave application details by eid
router.get("/getEid/:id", async (req, res) => {
  try {
    const id = req.params.id;
    const leaveApplications = await LeaveApplication.find({ eid: id });
    logger.info("Leave applications fetched by eid");
    res.status(200).json(leaveApplications);
  } catch (err) {
    logger.error(`Error fetching leave applications by eid: ${err.message}`);
    res.status(500).json("Error");
  }
});

module.exports = router;
