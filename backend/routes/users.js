const express = require("express");
const router = new express.Router();
let User = require("../models/User");
const rateLimit = require('express-rate-limit');
const helmet = require('helmet');

router.use(helmet());

const apiLimiter = rateLimit({
  windowMs: 15 * 60 * 1000,
  max: 100,
  message: 'Too many requests from this IP, please try again later.',
});

router.use(apiLimiter);



//fetch all users
router.route("/").get((req, res) => {
  User.find()
    .then((users) => {
      res.json(users);
    })
    .catch((err) => {
      console.log(err);
    });
});

//search function
router.get("/search/:key", async (req, res) => {
  const searchKey = req.params.key;

  if (!searchKey || searchKey.trim().length === 0) {
    return res.status(400).json({ message: 'Search key is required and cannot be empty' });
  }

  let result = await User.find({
    
    $or: [
      {
        email: { $regex: req.params.key },
      },
      {
        fname: { $regex: req.params.key },
      },
      {
        address: { $regex: req.params.key },
      },
    ],
  });
  res.send(result);
});


module.exports = router;
