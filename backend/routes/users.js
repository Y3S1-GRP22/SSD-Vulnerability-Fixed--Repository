const express = require("express");
const router = new express.Router();
let User = require("../models/User");
const rateLimit = require("express-rate-limit");
const helmet = require("helmet");
const logger = require("../utils/logger");

router.use(helmet());

const apiLimiter = rateLimit({
  windowMs: 15 * 60 * 1000,
  max: 100,
  message: "Too many requests from this IP, please try again later.",
});

router.use(apiLimiter);

//fetch all users
router.route("/").get((req, res) => {
  User.find()
    .then((users) => {
      logger.info("Fetched all users");
      res.json(users);
    })
    .catch((err) => {
      logger.error("Error fetching users: " + err.message);
      res
        .status(500)
        .json({ status: "Error with fetching users", error: err.message });
    });
});

//search function
router.get("/search/:key", async (req, res) => {
  const key = req.params.key;

  try {
    let result = await User.find({
      $or: [
        {
          email: { $regex: req.params.key },
        },
        {
          fname: { $regex: req.params.key },
        },
        {
          address: { $regex: req.params.key },
        },
      ],
    });

    logger.info(`Search performed with key: ${key}`);
    res.status(200).json(result);
  } catch (err) {
    logger.error("Error performing search: " + err.message);
    res.status(500).json({ status: "Error with search", error: err.message });
  }
});

module.exports = router;
